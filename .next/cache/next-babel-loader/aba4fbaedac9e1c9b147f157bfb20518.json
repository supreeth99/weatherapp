{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\weatherapp\\\\pages\\\\components\\\\info.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Dropdown } from 'semantic-ui-react';\nimport Layout from './layout'; // import Drop from './select';\n\nvar MyComponent = /*#__PURE__*/function (_Component) {\n  _inherits(MyComponent, _Component);\n\n  var _super = _createSuper(MyComponent);\n\n  function MyComponent(props) {\n    var _this;\n\n    _classCallCheck(this, MyComponent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      e.preventDefault();\n      console.log(_this.state.city);\n      console.log(_this.textInput.value);\n      var newCity = _this.textInput.value;\n      console.log(\"newcity:\", newCity);\n      console.log('submitted');\n\n      _this.setState({\n        newCity: newCity\n      });\n\n      console.log(\"state:\", _this.state.city); // const { s } = this.state;\n      // s=this.textInput.value\n      // this.setState({ s })\n      // console.log(this.state.city)\n    });\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      city: \"a\"\n    };\n    return _this;\n  }\n\n  _createClass(MyComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=12.9716&lon=77.5946&exclude=hourly,daily&appid=b5b0475c91ae54e97e596206b2dd0700\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          items: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 16\n          }\n        }, \"Loading...\");\n      } else {\n        return (// <Drop />\n          //   <ul>\n          //     {/* {items.map(item => (\n          //       <li key={item.name}>\n          //         {item.name} {item.price}\n          //       </li>\n          //     ))} */}\n          //     <li>{items.timezone}</li>\n          //   </ul>\n          __jsx(\"form\", {\n            onSubmit: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 9\n            }\n          }, __jsx(\"input\", {\n            id: \"input\",\n            ref: function ref(input) {\n              _this3.textInput = input;\n            },\n            type: \"text\",\n            placeholder: \"Enter city Here\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }\n          }), __jsx(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }\n          }), console.log(\"body:\", this.state.city))\n        );\n      }\n    }\n  }]);\n\n  return MyComponent;\n}(Component);\n\nexport default MyComponent;","map":{"version":3,"sources":["C:/Users/DELL/weatherapp/pages/components/info.js"],"names":["React","Component","Dropdown","Layout","MyComponent","props","e","preventDefault","console","log","state","city","textInput","value","newCity","setState","error","isLoaded","items","fetch","then","res","json","result","message","handleChange","input"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport Layout from './layout';\r\n// import Drop from './select';\r\nclass MyComponent extends Component {\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: [],\r\n        city:\"a\"\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=12.9716&lon=77.5946&exclude=hourly,daily&appid=b5b0475c91ae54e97e596206b2dd0700\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n    handleChange = (e) => {\r\n      e.preventDefault();\r\n      console.log(this.state.city);\r\n      console.log(this.textInput.value)\r\n      const newCity = this.textInput.value;\r\n      console.log(\"newcity:\",newCity)\r\n      console.log('submitted');\r\n      this.setState({newCity})\r\n      console.log(\"state:\",this.state.city)\r\n      // const { s } = this.state;\r\n      // s=this.textInput.value\r\n      // this.setState({ s })\r\n      // console.log(this.state.city)\r\n      \r\n   }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n            // <Drop />\r\n        //   <ul>\r\n        //     {/* {items.map(item => (\r\n        //       <li key={item.name}>\r\n        //         {item.name} {item.price}\r\n        //       </li>\r\n        //     ))} */}\r\n        //     <li>{items.timezone}</li>\r\n        //   </ul>\r\n        <form onSubmit={this.handleChange}>\r\n                <input id=\"input\" ref={(input) => { this.textInput = input; }} type=\"text\" placeholder=\"Enter city Here\" />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                {console.log(\"body:\",this.state.city)} \r\n      </form>\r\n        );\r\n      }\r\n    }\r\n  }\r\nexport default MyComponent"]},"metadata":{},"sourceType":"module"}
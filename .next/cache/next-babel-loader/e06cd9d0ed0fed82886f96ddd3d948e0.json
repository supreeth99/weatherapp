{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\weatherapp\\\\pages\\\\components\\\\info.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Dropdown } from 'semantic-ui-react';\nimport Layout from './layout';\n\nclass MyComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", e => {\n      e.preventDefault(); //console.log(\"handlechange 1st:\",this.state.city);\n      //console.log(this.textInput.value)\n\n      const newCity = this.textInput.value; //console.log(\"newcity:\",newCity)\n      //console.log('submitted');\n\n      this.setState({\n        city: newCity\n      }); // console.log(\"after change state:\",this.state.city)\n\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${newCity}&appid=a0a0e7eb9508b1beccefd9bd1207f35f`).then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          items: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    });\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      city: \"bangalore\"\n    };\n  }\n\n  //  getWeather(){\n  //   fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=b5b0475c91ae54e97e596206b2dd0700`)\n  //   .then(res => res.json())\n  //   .then(\n  //     (result) => {\n  //       this.setState({\n  //         isLoaded: true,\n  //         items: result\n  //       });\n  //     },\n  //     // Note: it's important to handle errors here\n  //     // instead of a catch() block so that we don't swallow\n  //     // exceptions from actual bugs in components.\n  //     (error) => {\n  //       this.setState({\n  //         isLoaded: true,\n  //         error\n  //       });\n  //     }\n  //   )\n  //  }\n  render() {\n    // const { error, isLoaded, items } = this.state;\n    // if (error) {\n    //   return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //   return <div>Loading...</div>;\n    // } else {\n    return (// <Drop />\n      //   <ul>\n      //     {/* {items.map(item => (\n      //       <li key={item.name}>\n      //         {item.name} {item.price}\n      //       </li>\n      //     ))} */}\n      //     <li>{items.timezone}</li>\n      //   </ul>\n      __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, __jsx(\"form\", {\n        onSubmit: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, console.log(\"before body:\", this.state.city), __jsx(\"input\", {\n        id: \"input\",\n        ref: input => {\n          this.textInput = input;\n        },\n        type: \"text\",\n        placeholder: \"Enter city Here\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      })), console.log(\"body:\", this.state.city), console.log(this.state.items))\n    );\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["C:/Users/DELL/weatherapp/pages/components/info.js"],"names":["React","Component","Dropdown","Layout","MyComponent","constructor","props","e","preventDefault","newCity","textInput","value","setState","city","fetch","then","res","json","result","isLoaded","items","error","state","render","handleChange","console","log","input"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAEhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,0CAWHC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF,GADoB,CAEpB;AACA;;AACA,YAAMC,OAAO,GAAG,KAAKC,SAAL,CAAeC,KAA/B,CAJoB,CAKpB;AACA;;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAACJ;AAAN,OAAd,EAPoB,CAQrB;;AACAK,MAAAA,KAAK,CAAE,qDAAoDL,OAAQ,yCAA9D,CAAL,CACAM,IADA,CACKC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADZ,EAEAF,IAFA,CAGEG,MAAD,IAAY;AACV,aAAKN,QAAL,CAAc;AACZO,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,KAAK,EAAEF;AAFK,SAAd;AAID,OARF,EASC;AACA;AACA;AACCG,MAAAA,KAAD,IAAW;AACT,aAAKT,QAAL,CAAc;AACZO,UAAAA,QAAQ,EAAE,IADE;AAEZE,UAAAA;AAFY,SAAd;AAID,OAjBF;AAoBD,KAxCmB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,IADI;AAEXF,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXP,MAAAA,IAAI,EAAC;AAJM,KAAb;AAMD;;AAkCH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEEU,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACE,WACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKJ,KAAL,CAAWT,IAAtC,CADH,EAEQ;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,GAAG,EAAGc,KAAD,IAAW;AAAE,eAAKjB,SAAL,GAAiBiB,KAAjB;AAAyB,SAA7D;AAA+D,QAAA,IAAI,EAAC,MAApE;AAA2E,QAAA,WAAW,EAAC,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,EAGQ;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,CADA,EAODF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKJ,KAAL,CAAWT,IAA/B,CAPC,EAQDY,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWF,KAAvB,CARC;AAVA;AAqBD;;AA9F6B;;AAiGpC,eAAehB,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport Layout from './layout';\r\n\r\nclass MyComponent extends Component {\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: [],\r\n        city:\"bangalore\"\r\n      };\r\n    }\r\n  \r\n    \r\n    handleChange = (e) => {\r\n      e.preventDefault();\r\n      //console.log(\"handlechange 1st:\",this.state.city);\r\n      //console.log(this.textInput.value)\r\n      const newCity = this.textInput.value;\r\n      //console.log(\"newcity:\",newCity)\r\n      //console.log('submitted');\r\n      this.setState({city:newCity})\r\n     // console.log(\"after change state:\",this.state.city)\r\n     fetch(`https://api.openweathermap.org/data/2.5/weather?q=${newCity}&appid=a0a0e7eb9508b1beccefd9bd1207f35f`)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: result\r\n        });\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      }\r\n    )\r\n     \r\n   }\r\n\r\n  //  getWeather(){\r\n  //   fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=b5b0475c91ae54e97e596206b2dd0700`)\r\n  //   .then(res => res.json())\r\n  //   .then(\r\n  //     (result) => {\r\n  //       this.setState({\r\n  //         isLoaded: true,\r\n  //         items: result\r\n  //       });\r\n  //     },\r\n  //     // Note: it's important to handle errors here\r\n  //     // instead of a catch() block so that we don't swallow\r\n  //     // exceptions from actual bugs in components.\r\n  //     (error) => {\r\n  //       this.setState({\r\n  //         isLoaded: true,\r\n  //         error\r\n  //       });\r\n  //     }\r\n  //   )\r\n  //  }\r\n  \r\n    render() {\r\n      // const { error, isLoaded, items } = this.state;\r\n      // if (error) {\r\n      //   return <div>Error: {error.message}</div>;\r\n      // } else if (!isLoaded) {\r\n      //   return <div>Loading...</div>;\r\n      // } else {\r\n        return (\r\n            // <Drop />\r\n        //   <ul>\r\n        //     {/* {items.map(item => (\r\n        //       <li key={item.name}>\r\n        //         {item.name} {item.price}\r\n        //       </li>\r\n        //     ))} */}\r\n        //     <li>{items.timezone}</li>\r\n        //   </ul>\r\n        <div>\r\n        <form onSubmit={this.handleChange}>\r\n          {console.log(\"before body:\",this.state.city)}\r\n                <input id=\"input\" ref={(input) => { this.textInput = input; }} type=\"text\" placeholder=\"Enter city Here\" />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                \r\n      </form>\r\n      {console.log(\"body:\",this.state.city)} \r\n      {console.log(this.state.items)}\r\n      </div>  \r\n        );\r\n      }\r\n    }\r\n  \r\nexport default MyComponent"]},"metadata":{},"sourceType":"module"}
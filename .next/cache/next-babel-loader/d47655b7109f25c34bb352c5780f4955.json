{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\weatherapp\\\\pages\\\\components\\\\info.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Dropdown, Grid, Card, Container } from 'semantic-ui-react';\nimport Layout from './layout';\n\nvar MyComponent = /*#__PURE__*/function (_Component) {\n  _inherits(MyComponent, _Component);\n\n  var _super = _createSuper(MyComponent);\n\n  function MyComponent(props) {\n    var _this;\n\n    _classCallCheck(this, MyComponent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      e.preventDefault(); //console.log(\"handlechange 1st:\",this.state.city);\n      //console.log(this.textInput.value)\n\n      var newCity = _this.textInput.value; //console.log(\"newcity:\",newCity)\n      //console.log('submitted');\n\n      _this.setState({\n        city: newCity\n      }); // console.log(\"after change state:\",this.state.city)\n\n\n      fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(newCity, \"&appid=a0a0e7eb9508b1beccefd9bd1207f35f\")).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this.setState({\n          isLoaded: true,\n          items: JSON.stringify(result),\n          temp: result.main.temp,\n          description: JSON.stringify(result.weather[0].description)\n        }); //console.log((result['main'].temp))\n\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this.setState({\n          isLoaded: true,\n          error: error\n        });\n      }); // console.log((this.state.items['main']['temp']))\n    });\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      city: \"bangalore\",\n      temp: \"\",\n      description: \"\"\n    };\n    return _this;\n  } //   componentDidMount() {\n  //   fetch(\"https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=a0a0e7eb9508b1beccefd9bd1207f35f\")\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //         const data = result;\n  //         this.setState({\n  //           isLoaded: true,\n  //           items: data\n  //         });\n  //       },\n  //       // Note: it's important to handle errors here\n  //       // instead of a catch() block so that we don't swallow\n  //       // exceptions from actual bugs in components.\n  //       (error) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           error\n  //         });\n  //       }\n  //     )\n  //     console.log(this.state.items);\n  // }\n\n\n  _createClass(MyComponent, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var item = [{\n        header: this.state.description,\n        meta: \"\",\n        description: \"Weather Condition\" // style: { overflowWrap: \"break-word\" },\n\n      }];\n      return __jsx(Card.Group, {\n        items: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const { error, isLoaded, items } = this.state;\n      // if (error) {\n      //   return <div>Error: {error.message}</div>;\n      // } else if (!isLoaded) {\n      //   return <div>Loading...</div>;\n      // } else {\n      return (//   <div>\n        //   <form onSubmit={this.handleChange}>\n        //           <input id=\"input\" ref={(input) => { this.textInput = input; }} type=\"text\" placeholder=\"Enter city Here\" />\n        //           <input type=\"submit\" value=\"Submit\" />\n        // </form>\n        // <h3 style={{marginLeft:\"15px\", marginRight:\"15px\"}}>Weather Details Details</h3>\n        //   <Grid stackable style={{marginLeft:\"15px\", marginRight:\"15px\"}}>\n        //     <Grid.Row>\n        //       <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n        //     </Grid.Row>\n        //   </Grid>\n        // {console.log(\"body:\",this.state.city)} \n        // {console.log(\"temp:\",this.state.temp)}\n        // {console.log(\"description:\",this.state.description)}\n        // </div>  \n        __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }\n        }, __jsx(\"link\", {\n          rel: \"stylesheet\",\n          href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 10\n          }\n        }), __jsx(Container, {\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }\n        }, __jsx(Segment, {\n          raised: true,\n          size: \"big\",\n          attached: \"top\",\n          inverted: true,\n          textAlign: \"center\",\n          style: {\n            minHeight: 120,\n            marginLeft: \"0px\",\n            marginRight: \"0px\",\n            padding: '0em',\n            minWidth: \"300\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 7\n          }\n        }, __jsx(Header, {\n          as: \"h1\",\n          content: \"Weather Report\",\n          style: {\n            fontSize: '4em',\n            fontWeight: 'normal',\n            marginBottom: 0,\n            marginTop: '.5em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }\n        }))))\n      );\n    }\n  }]);\n\n  return MyComponent;\n}(Component);\n\nexport default MyComponent;","map":{"version":3,"sources":["C:/Users/DELL/weatherapp/pages/components/info.js"],"names":["React","Component","Dropdown","Grid","Card","Container","Layout","MyComponent","props","e","preventDefault","newCity","textInput","value","setState","city","fetch","then","res","json","result","isLoaded","items","JSON","stringify","temp","main","description","weather","error","state","item","header","meta","minHeight","marginLeft","marginRight","padding","minWidth","fontSize","fontWeight","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown,Grid,Card,Container } from 'semantic-ui-react'\r\nimport Layout from './layout';\r\n\r\nclass MyComponent extends Component {\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: [],\r\n        city:\"bangalore\",\r\n        temp:\"\",\r\n        description:\"\",\r\n\r\n      };\r\n    }\r\n  //   componentDidMount() {\r\n    \r\n  //   fetch(\"https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=a0a0e7eb9508b1beccefd9bd1207f35f\")\r\n  //     .then(res => res.json())\r\n  //     .then(\r\n  //       (result) => {\r\n  //         const data = result;\r\n  //         this.setState({\r\n  //           isLoaded: true,\r\n  //           items: data\r\n  //         });\r\n  //       },\r\n  //       // Note: it's important to handle errors here\r\n  //       // instead of a catch() block so that we don't swallow\r\n  //       // exceptions from actual bugs in components.\r\n  //       (error) => {\r\n  //         this.setState({\r\n  //           isLoaded: true,\r\n  //           error\r\n  //         });\r\n  //       }\r\n  //     )\r\n  //     console.log(this.state.items);\r\n  // }\r\n  \r\n    \r\n    handleChange = (e) => {\r\n      e.preventDefault();\r\n      //console.log(\"handlechange 1st:\",this.state.city);\r\n      //console.log(this.textInput.value)\r\n      const newCity = this.textInput.value;\r\n      //console.log(\"newcity:\",newCity)\r\n      //console.log('submitted');\r\n      this.setState({city:newCity})\r\n     // console.log(\"after change state:\",this.state.city)\r\n     fetch(`https://api.openweathermap.org/data/2.5/weather?q=${newCity}&appid=a0a0e7eb9508b1beccefd9bd1207f35f`)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: JSON.stringify(result),\r\n          temp: result.main.temp,\r\n          description:JSON.stringify(result.weather[0].description),\r\n        });\r\n        //console.log((result['main'].temp))\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      }\r\n    )\r\n    // console.log((this.state.items['main']['temp']))\r\n   }\r\n\r\n   renderCards() {\r\n\r\n\r\n    const item = [\r\n      {\r\n        header: this.state.description,\r\n        meta:  \"\",\r\n        description:\"Weather Condition\",\r\n        // style: { overflowWrap: \"break-word\" },\r\n      },\r\n   \r\n    ];\r\n    return <Card.Group items={item} />;\r\n  }\r\n  \r\n    render() {\r\n      // const { error, isLoaded, items } = this.state;\r\n      // if (error) {\r\n      //   return <div>Error: {error.message}</div>;\r\n      // } else if (!isLoaded) {\r\n      //   return <div>Loading...</div>;\r\n      // } else {\r\n        return (\r\n      //   <div>\r\n      //   <form onSubmit={this.handleChange}>\r\n      //           <input id=\"input\" ref={(input) => { this.textInput = input; }} type=\"text\" placeholder=\"Enter city Here\" />\r\n      //           <input type=\"submit\" value=\"Submit\" />\r\n                \r\n      // </form>\r\n      // <h3 style={{marginLeft:\"15px\", marginRight:\"15px\"}}>Weather Details Details</h3>\r\n      //   <Grid stackable style={{marginLeft:\"15px\", marginRight:\"15px\"}}>\r\n      //     <Grid.Row>\r\n      //       <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\r\n      //     </Grid.Row>\r\n      //   </Grid>\r\n      // {console.log(\"body:\",this.state.city)} \r\n      // {console.log(\"temp:\",this.state.temp)}\r\n      // {console.log(\"description:\",this.state.description)}\r\n      \r\n      // </div>  \r\n      <div>\r\n         <link\r\n          rel=\"stylesheet\"\r\n          href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n          /> \r\n      <Container fluid>\r\n      <Segment\r\n            raised\r\n            size=\"big\"\r\n            attached=\"top\"\r\n            inverted\r\n            textAlign='center'\r\n            style={{ minHeight: 120,marginLeft:\"0px\",marginRight:\"0px\", padding: '0em',minWidth:\"300\" }}\r\n          > \r\n        <Header\r\n          as='h1'\r\n          content='Weather Report'\r\n          style={{\r\n            fontSize:'4em',\r\n            fontWeight: 'normal',\r\n            marginBottom: 0,\r\n            marginTop: '.5em',\r\n          }}\r\n        /> \r\n        </Segment>\r\n          \r\n    </Container>\r\n    </div>\r\n        );\r\n      }\r\n    }\r\n  \r\nexport default MyComponent"]},"metadata":{},"sourceType":"module"}
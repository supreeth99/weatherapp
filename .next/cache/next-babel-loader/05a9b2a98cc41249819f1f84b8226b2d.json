{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\weatherapp\\\\pages\\\\components\\\\info.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Dropdown, Grid, Card, Container, Segment, Header, Form, Input, Button } from 'semantic-ui-react';\nimport Layout from './layout';\n\nclass MyComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", e => {\n      e.preventDefault(); //console.log(\"handlechange 1st:\",this.state.city);\n      //console.log(this.textInput.value)\n\n      const newCity = this.state.city; //console.log(\"newcity:\",newCity)\n      //console.log('submitted');\n\n      this.setState({\n        city: newCity\n      }); // console.log(\"after change state:\",this.state.city)\n\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${newCity}&appid=a0a0e7eb9508b1beccefd9bd1207f35f`).then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          items: JSON.stringify(result),\n          temp: result.main.temp,\n          description: JSON.stringify(result.weather[0].description),\n          temp_min: result.main.temp_min,\n          temp_max: result.main.temp_max,\n          humidity: result.main.humidity\n        }); //console.log((result['main'].temp))\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }); // console.log((this.state.items['main']['temp']))\n    });\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      city: \"chennai\",\n      temp: \"\",\n      description: \"\",\n      temp_min: \"\",\n      temp_max: \"\",\n      humidity: \"\"\n    };\n  } //   componentDidMount() {\n  //   fetch(\"https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=a0a0e7eb9508b1beccefd9bd1207f35f\")\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //         const data = result;\n  //         this.setState({\n  //           isLoaded: true,\n  //           items: data\n  //         });\n  //       },\n  //       // Note: it's important to handle errors here\n  //       // instead of a catch() block so that we don't swallow\n  //       // exceptions from actual bugs in components.\n  //       (error) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           error\n  //         });\n  //       }\n  //     )\n  //     console.log(this.state.items);\n  // }\n\n\n  renderCards() {\n    const item = [{\n      header: this.state.description,\n      meta: \"\",\n      description: \"Weather Condition\" // style: { overflowWrap: \"break-word\" },\n\n    }, {\n      header: this.state.temp - 273,\n      meta: \"\",\n      description: \"Current temprature\"\n    }, {\n      header: this.state.temp_min - 273,\n      meta: \"\",\n      description: \"Minimum Temperature\"\n    }, {\n      header: this.state.temp_max - 273,\n      meta: \"\",\n      description: \"Maximum Temperature\"\n    }, {\n      header: this.state.humidity,\n      meta: \"\",\n      description: \"Humidity\"\n    }];\n    return __jsx(Card.Group, {\n      items: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    // const { error, isLoaded, items } = this.state;\n    // if (error) {\n    //   return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //   return <div>Loading...</div>;\n    // } else {\n    //   <div>\n    //   <form onSubmit={this.handleChange}>\n    //           <input id=\"input\" ref={(input) => { this.textInput = input; }} type=\"text\" placeholder=\"Enter city Here\" />\n    //           <input type=\"submit\" value=\"Submit\" />\n    // </form>\n    // <h3 style={{marginLeft:\"15px\", marginRight:\"15px\"}}>Weather Details Details</h3>\n    //   <Grid stackable style={{marginLeft:\"15px\", marginRight:\"15px\"}}>\n    //     <Grid.Row>\n    //       <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n    //     </Grid.Row>\n    //   </Grid>\n    // {console.log(\"body:\",this.state.city)} \n    // {console.log(\"temp:\",this.state.temp)}\n    // {console.log(\"description:\",this.state.description)}\n    // </div>  \n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 10\n      }\n    }), __jsx(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, __jsx(Segment, {\n      raised: true,\n      size: \"big\",\n      attached: \"top\",\n      inverted: true,\n      textAlign: \"center\",\n      style: {\n        minHeight: 120,\n        marginLeft: \"0px\",\n        marginRight: \"0px\",\n        padding: '0em',\n        minWidth: \"300\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, __jsx(Header, {\n      as: \"h1\",\n      content: \"Weather Report\",\n      style: {\n        fontSize: '4em',\n        fontWeight: 'normal',\n        marginBottom: 0,\n        marginTop: '.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }))), __jsx(Form, {\n      onSubmit: this.handleChange,\n      error: !!this.state.errorMessage,\n      style: {\n        marginTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, __jsx(\"lable\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, \"Enter city name\")), __jsx(Input, {\n      size: \"small\",\n      value: this.state.city,\n      onChange: event => this.setState({\n        city: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    })), __jsx(Button, {\n      primary: true,\n      OnClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"Submit!\")), __jsx(Grid, {\n      stackable: true,\n      style: {\n        marginLeft: \"15px\",\n        marginRight: \"15px\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, this.renderCards()))));\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["C:/Users/DELL/weatherapp/pages/components/info.js"],"names":["React","Component","Dropdown","Grid","Card","Container","Segment","Header","Form","Input","Button","Layout","MyComponent","constructor","props","e","preventDefault","newCity","state","city","setState","fetch","then","res","json","result","isLoaded","items","JSON","stringify","temp","main","description","weather","temp_min","temp_max","humidity","error","renderCards","item","header","meta","render","minHeight","marginLeft","marginRight","padding","minWidth","fontSize","fontWeight","marginBottom","marginTop","handleChange","errorMessage","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown,Grid,Card,Container,Segment,Header,Form,Input,Button } from 'semantic-ui-react'\r\nimport Layout from './layout';\r\n\r\nclass MyComponent extends Component {\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: [],\r\n        city:\"chennai\",\r\n        temp:\"\",\r\n        description:\"\",\r\n        temp_min:\"\",\r\n        temp_max:\"\",\r\n        humidity:\"\"\r\n\r\n      };\r\n    }\r\n  //   componentDidMount() {\r\n    \r\n  //   fetch(\"https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=a0a0e7eb9508b1beccefd9bd1207f35f\")\r\n  //     .then(res => res.json())\r\n  //     .then(\r\n  //       (result) => {\r\n  //         const data = result;\r\n  //         this.setState({\r\n  //           isLoaded: true,\r\n  //           items: data\r\n  //         });\r\n  //       },\r\n  //       // Note: it's important to handle errors here\r\n  //       // instead of a catch() block so that we don't swallow\r\n  //       // exceptions from actual bugs in components.\r\n  //       (error) => {\r\n  //         this.setState({\r\n  //           isLoaded: true,\r\n  //           error\r\n  //         });\r\n  //       }\r\n  //     )\r\n  //     console.log(this.state.items);\r\n  // }\r\n  \r\n    \r\n    handleChange = (e) => {\r\n      e.preventDefault();\r\n      //console.log(\"handlechange 1st:\",this.state.city);\r\n      //console.log(this.textInput.value)\r\n      const newCity = this.state.city;\r\n      //console.log(\"newcity:\",newCity)\r\n      //console.log('submitted');\r\n      this.setState({city:newCity})\r\n     // console.log(\"after change state:\",this.state.city)\r\n     fetch(`https://api.openweathermap.org/data/2.5/weather?q=${newCity}&appid=a0a0e7eb9508b1beccefd9bd1207f35f`)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: JSON.stringify(result),\r\n          temp: result.main.temp,\r\n          description:JSON.stringify(result.weather[0].description),\r\n          temp_min:result.main.temp_min,\r\n          temp_max:result.main.temp_max,\r\n          humidity:result.main.humidity,\r\n       });\r\n        //console.log((result['main'].temp))\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      }\r\n    )\r\n    // console.log((this.state.items['main']['temp']))\r\n   }\r\n\r\n   renderCards() {\r\n\r\n\r\n    const item = [\r\n      {\r\n        header: this.state.description,\r\n        meta:  \"\",\r\n        description:\"Weather Condition\",\r\n        // style: { overflowWrap: \"break-word\" },\r\n      },\r\n      {\r\n        header: this.state.temp-273,\r\n        meta:\"\",\r\n        description:\"Current temprature\",\r\n      },\r\n      {\r\n        header:this.state.temp_min-273,\r\n        meta:\"\",\r\n        description:\"Minimum Temperature\",\r\n      },\r\n      {\r\n        header:this.state.temp_max-273,\r\n        meta:\"\",\r\n        description:\"Maximum Temperature\",\r\n      },\r\n      {\r\n        header:this.state.humidity,\r\n        meta:\"\",\r\n        description:\"Humidity\",\r\n      }\r\n   \r\n    ];\r\n    return <Card.Group items={item} />;\r\n  }\r\n  \r\n    render() {\r\n      // const { error, isLoaded, items } = this.state;\r\n      // if (error) {\r\n      //   return <div>Error: {error.message}</div>;\r\n      // } else if (!isLoaded) {\r\n      //   return <div>Loading...</div>;\r\n      // } else {\r\n        //   <div>\r\n        //   <form onSubmit={this.handleChange}>\r\n        //           <input id=\"input\" ref={(input) => { this.textInput = input; }} type=\"text\" placeholder=\"Enter city Here\" />\r\n        //           <input type=\"submit\" value=\"Submit\" />\r\n        \r\n        // </form>\r\n        // <h3 style={{marginLeft:\"15px\", marginRight:\"15px\"}}>Weather Details Details</h3>\r\n        //   <Grid stackable style={{marginLeft:\"15px\", marginRight:\"15px\"}}>\r\n        //     <Grid.Row>\r\n        //       <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\r\n        //     </Grid.Row>\r\n        //   </Grid>\r\n        // {console.log(\"body:\",this.state.city)} \r\n        // {console.log(\"temp:\",this.state.temp)}\r\n        // {console.log(\"description:\",this.state.description)}\r\n        \r\n        // </div>  \r\n      return (\r\n        <div>\r\n         <link\r\n          rel=\"stylesheet\"\r\n          href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n          /> \r\n      <Container fluid>\r\n      <Segment\r\n            raised\r\n            size=\"big\"\r\n            attached=\"top\"\r\n            inverted\r\n            textAlign='center'\r\n            style={{ minHeight: 120,marginLeft:\"0px\",marginRight:\"0px\", padding: '0em',minWidth:\"300\" }}\r\n          > \r\n        <Header\r\n          as='h1'\r\n          content='Weather Report'\r\n          style={{\r\n            fontSize:'4em',\r\n            fontWeight: 'normal',\r\n            marginBottom: 0,\r\n            marginTop: '.5em',\r\n          }}\r\n        /> \r\n        </Segment>\r\n        </Container>\r\n        <Form onSubmit={this.handleChange} error={!!this.state.errorMessage} style={{marginTop:\"15px\"}}>\r\n          <Form.Field>\r\n            <h2><lable>Enter city name</lable></h2>\r\n            <Input\r\n              size='small'\r\n              value={this.state.city}\r\n              onChange={(event) =>\r\n                this.setState({ city: event.target.value })\r\n              }\r\n            />\r\n          </Form.Field>\r\n          <Button primary OnClick>\r\n              Submit!\r\n           </Button>\r\n        </Form>\r\n        <Grid stackable style={{marginLeft:\"15px\", marginRight:\"15px\", marginTop:\"10px\"}}>\r\n          <Grid.Row>\r\n            <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        </div>\r\n        );\r\n      }\r\n    }\r\n  \r\nexport default MyComponent"]},"metadata":{},"sourceType":"module"}